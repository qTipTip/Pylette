[project]
name = "pylette"
version = "5.1.1"
description = "A Python library for extracting color palettes from images."
authors = [
    {name = "Ivar Stangeby"}
]
license = {text = "MIT"}
readme = "README.md"
requires-python = ">=3.10"
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Typing :: Typed"
]
dependencies = [
    "numpy>=1.26.4",
    "opencv-python>=4.11.0.86",
    "pillow>=9.3,<11.0",
    "requests>=2.32.3",
    "scikit-learn>=1.2",
    "typer>=0.12.5",
]

[tool.ruff]
line-length = 120

[tool.ruff.lint]
select = [
    "E",
    "F",
    "I"
]

[tool.hatch.build.targets.wheel]
packages = ["Pylette"]

[project.optional-dependencies]
dev = [
    "pre-commit>=3.7.1",
    "pytest>=8.2.2",
    "opencv-python>=4.10.0.84",
    "mkdocs[python]>=1.6.0",
    "mkdocs-material>=9.5.27",
    "mkdocstrings[python]>=0.25.1",
    "mkdocs-glightbox>=0.4.0",
    "requests-mock>=1.12.1",
    "ruff>=0.5.0",
    "pyright>=1.1.0",
]

[project.scripts]
pylette = "Pylette.cmd:main_typer"

[tool.pytest.ini_options]
testpaths = [
  "tests"
]

[tool.pyright]
include = ["Pylette"]
exclude = ["tests"]
typeCheckingMode = "strict"
reportMissingImports = false
reportMissingTypeStubs = false
reportUnknownVariableType = false
reportUnknownMemberType = false
reportUnknownArgumentType = false
reportUnknownParameterType = false
reportUnusedImport = true
reportUnusedClass = true
reportUnusedFunction = true
reportUnusedVariable = true
reportDuplicateImport = true
reportOptionalSubscript = true
reportOptionalMemberAccess = true
reportOptionalCall = true
reportOptionalIterable = true
reportOptionalContextManager = true
reportOptionalOperand = true
reportTypedDictNotRequiredAccess = false
pythonVersion = "3.10"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[dependency-groups]
dev = [
    "importtime-waterfall>=1.0.0",
]
